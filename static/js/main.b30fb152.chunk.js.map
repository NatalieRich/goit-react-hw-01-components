{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.js","components/Statistics/Statistic.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/Transaction.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","name","tag","location","stats","className","s","profile","src","alt","list","label","quantity","followers","views","likes","protoTypes","PropTypes","string","isRequired","objectOf","shape","number","Statistic","percentage","Statistics","title","statistics","map","stat","item","id","FriendListItem","isOnline","status","style","backgroundColor","width","FriendList","friends","friendList","Transaction","type","amount","currency","TransactionHistory","items","transactionHistory","tbody","tr","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,KAAO,sBAAsB,KAAO,sBAAsB,MAAQ,uBAAuB,MAAQ,uBAAuB,SAAW,4B,iBCAzND,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,gBCA/MD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,OAAS,2BAA2B,OAAS,2BAA2B,KAAO,2B,4PCA7KD,EAAOC,QAAU,CAAC,mBAAqB,+CAA+C,MAAQ,kCAAkC,MAAQ,kCAAkC,GAAK,iC,+gGCGzKC,EAAU,SAAC,GAA0C,IAAzCC,EAAwC,EAAxCA,OAAQC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAC7C,OACA,sBAAKC,UAAWC,IAAEC,QAAlB,UAEE,sBAAKF,UAAU,cAAf,UACE,qBACEG,IAAKR,EACLS,IAAI,gHACJJ,UAAWC,IAAEN,SAEf,mBAAGK,UAAWC,IAAEL,KAAhB,SAAuBA,IACvB,oBAAGI,UAAU,MAAb,cAAqBH,KACrB,mBAAGG,UAAU,WAAb,SAAyBF,OAG3B,qBAAIE,UAAWC,IAAEF,MAAjB,UACE,qBAAIC,UAAWC,IAAEI,KAAjB,UACE,sBAAML,UAAWC,IAAEK,MAAnB,uBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMS,eAEtC,qBAAIR,UAAWC,IAAEI,KAAjB,UACE,sBAAML,UAAWC,IAAEK,MAAnB,mBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMU,WAEtC,qBAAIT,UAAWC,IAAEI,KAAjB,UACE,sBAAML,UAAWC,IAAEK,MAAnB,mBACA,sBAAMN,UAAWC,IAAEM,SAAnB,SAA8BR,EAAMW,kBAQ5ChB,EAAQiB,WAAa,CACnBhB,OAAQiB,IAAUC,OAAOC,WACrBlB,KAAMgB,IAAUC,OAAOC,WACvBjB,IAAKe,IAAUC,OAAOC,WACtBhB,SAAUc,IAAUC,OAAOC,WAC3Bf,MAAOa,IAAUG,SACfH,IAAUI,MAAM,CACdR,UAAWI,IAAUK,OAAOH,WAC5BL,MAAOG,IAAUK,OAAOH,WAC1BJ,MAAOE,IAAUK,OAAOH,eAKjBpB,Q,wBClCAwB,EAfG,SAAC,GAA0B,IAAxBZ,EAAuB,EAAvBA,MAAOa,EAAgB,EAAhBA,WACxB,OACE,qCACG,sBAAMnB,UAAWC,IAAEK,MAAnB,SAA2BA,IAC3B,sBAAMN,UAAWC,IAAEkB,WAAnB,SAAgCA,QCuB1BC,EA1BI,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,MAAOtB,EAAW,EAAXA,MACxB,OACE,0BAASC,UAAWC,IAAEqB,WAAtB,UAEID,GAAS,oBAAIrB,UAAWC,IAAEoB,MAAjB,SAAyBA,IAEpC,oBAAIrB,UAAWC,IAAEI,KAAjB,SACGN,EAAMwB,KAAI,SAAAC,GAAI,OAAK,oBAElBxB,UAAWC,IAAEwB,KAFK,SAGlB,cAAC,EAAD,CACInB,MAAOkB,EAAKlB,MACZa,WAAYK,EAAKL,cAJhBK,EAAKE,a,wBCSPC,EAlBQ,SAAC,GAA8B,IAA7BhC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,KAAMgC,EAAc,EAAdA,SACnC,OACA,mCACI,qBAAI5B,UAAWC,IAAEwB,KAAjB,UACI,sBAAMzB,UAAWC,IAAE4B,OAAQC,MAAO,CAAEC,gBAAiBH,EAAW,QAAU,SAC1E,qBAAK5B,UAAWC,IAAEN,OAAQQ,IAAKR,EAAQS,IAAKR,EAAMoC,MAAM,OACxD,mBAAGhC,UAAWC,IAAEL,KAAhB,SAAuBA,UCepBqC,EApBI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,OACI,oBAAIlC,UAAWC,IAAEkC,WAAjB,SACKD,EAAQX,KAAI,gBAAGG,EAAH,EAAGA,GAAI9B,EAAP,EAAOA,KAAMD,EAAb,EAAaA,OAAQiC,EAArB,EAAqBA,SAArB,OACjB,cAAC,EAAD,CAEAjC,OAAQA,EACRC,KAAMA,EACNgC,SAAYA,GAHPF,S,QCWEU,EAlBK,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,SAChC,OACI,qCACE,6BAAKF,IACL,6BAAKC,IACL,6BAAKC,Q,gBC8BAC,EAjCY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACzB,OACF,wBAAOzC,UAAWC,IAAEyC,mBAApB,UACE,uBAAO1C,UAAWC,IAAEoB,MAApB,SACE,+BACE,sCACA,wCACA,+CAIJ,uBAAOrB,UAAWC,IAAE0C,MAApB,SACSF,EAAMlB,KAAI,SAAAE,GAAI,OAAK,oBAElBzB,UAAWC,IAAE2C,GAFK,SAGlB,cAAC,EAAD,CACEP,KAAMZ,EAAKY,KACXC,OAAQb,EAAKa,OACbC,SAAUd,EAAKc,YALZd,EAAKC,aCUTmB,MAjBf,WACE,OACE,gCACE,cAAC,EAAD,CACIjD,KAAMkD,EAAKlD,KACXC,IAAKiD,EAAKjD,IACVC,SAAUgD,EAAKhD,SACfH,OAAQmD,EAAKnD,OACbI,MAAO+C,EAAK/C,QAEhB,cAAC,EAAD,CAAYsB,MAAM,eAAetB,MAAOgD,IAR1C,IASE,cAAC,EAAD,CAAYb,QAASA,IACrB,cAAC,EAAD,CAAoBO,MAAOO,IAV7B,QCLJC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b30fb152.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2ddw1\",\"avatar\":\"Profile_avatar__1I7hL\",\"name\":\"Profile_name__d0BRP\",\"list\":\"Profile_list__S7KPp\",\"stats\":\"Profile_stats__3JRKC\",\"label\":\"Profile_label__2LYkl\",\"quantity\":\"Profile_quantity__2NBO5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3zTYg\",\"title\":\"Statistics_title__1_R7y\",\"list\":\"Statistics_list__28Kyv\",\"item\":\"Statistics_item__2gYcT\",\"label\":\"Statistics_label__3cII3\",\"percentage\":\"Statistics_percentage__1femL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__2Y2_7\",\"item\":\"FriendList_item__1JSNA\",\"status\":\"FriendList_status__2vssO\",\"avatar\":\"FriendList_avatar__agAmW\",\"name\":\"FriendList_name__2C6wq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3RGdu\",\"title\":\"TransactionHistory_title__3p0Rv\",\"tbody\":\"TransactionHistory_tbody__11quh\",\"tr\":\"TransactionHistory_tr__2_vRC\"};","import s from './Profile.module.css'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Profile = ({avatar, name, tag, location, stats}) => {\r\n  return (\r\n  <div className={s.profile}>\r\n      \r\n    <div className=\"description\">\r\n      <img\r\n        src={avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className={s.avatar}\r\n      />\r\n      <p className={s.name}>{name}</p>\r\n      <p className=\"tag\">@{tag}</p>\r\n      <p className=\"location\">{location}</p>\r\n    </div>\r\n\r\n    <ul className={s.stats}>\r\n      <li className={s.list}>\r\n        <span className={s.label}>Followers</span>\r\n        <span className={s.quantity}>{stats.followers}</span>\r\n      </li>\r\n      <li className={s.list}>\r\n        <span className={s.label}>Views</span>\r\n        <span className={s.quantity}>{stats.views}</span>\r\n      </li>\r\n      <li className={s.list}>\r\n        <span className={s.label}>Likes</span>\r\n        <span className={s.quantity}>{stats.likes}</span>\r\n      </li>\r\n    </ul>\r\n      \r\n  </div>)\r\n}\r\n\r\n\r\nProfile.protoTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      tag: PropTypes.string.isRequired,\r\n      location: PropTypes.string.isRequired,\r\n      stats: PropTypes.objectOf(\r\n        PropTypes.shape({\r\n          followers: PropTypes.number.isRequired,\r\n          views: PropTypes.number.isRequired,\r\n        likes: PropTypes.number.isRequired,\r\n        })\r\n      )\r\n}\r\n\r\nexport default Profile","import PropTypes from 'prop-types'\r\nimport s from './Statistics.module.css'\r\n\r\nconst Statistic = ({ label, percentage}) => {\r\n    return (\r\n      <>\r\n         <span className={s.label}>{label}</span>\r\n         <span className={s.percentage}>{percentage}</span>\r\n      </>\r\n    \r\n    )\r\n}\r\n\r\nStatistic.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  percentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistic","import PropTypes from 'prop-types'\r\nimport Statistic from './Statistic'\r\nimport s from './Statistics.module.css'\r\n\r\nconst Statistics = ({title, stats}) => {\r\n    return (\r\n      <section className={s.statistics}>\r\n        \r\n         {title && <h2 className={s.title}>{title}</h2>}\r\n            \r\n        <ul className={s.list}>\r\n          {stats.map(stat => (<li\r\n            key={stat.id}\r\n            className={s.item}>\r\n            <Statistic\r\n                label={stat.label}\r\n                percentage={stat.percentage}/>\r\n                </li>))}\r\n        </ul>\r\n      </section>\r\n    )\r\n};\r\n\r\nStatistics.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\nexport default Statistics","import PropTypes from 'prop-types'\r\nimport s from './FriendList.module.css'\r\n\r\nconst FriendListItem = ({avatar, name, isOnline}) => {\r\n    return (\r\n    <>\r\n        <li className={s.item}>\r\n            <span className={s.status} style={{ backgroundColor: isOnline ? 'green' : 'red' }}></span>\r\n            <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={s.name}>{name}</p>\r\n        </li>\r\n    </>\r\n    )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem","import FriendListItem from './FriendListItem'\r\nimport s from './FriendList.module.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst FriendList = ({ friends }) => {\r\n    return (\r\n        <ul className={s.friendList}>\r\n            {friends.map(({ id, name, avatar, isOnline }) =>\r\n        <FriendListItem\r\n        key={id}\r\n        avatar={avatar}\r\n        name={name}\r\n        isOnline = {isOnline}/>)}</ul>\r\n    )\r\n}\r\n\r\nFriendList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default FriendList\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Transaction = ({type, amount, currency}) => {\r\n    return (\r\n        <>\r\n          <td>{type}</td>\r\n          <td>{amount}</td>\r\n          <td>{currency}</td>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nTransaction.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n    amount: PropTypes.string.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Transaction","import PropTypes from 'prop-types'\r\nimport Transaction from './Transaction'\r\nimport s from './TransactionHistory.module.css'\r\n\r\nconst TransactionHistory = ({items}) => {\r\n    return (\r\n  <table className={s.transactionHistory}>\r\n    <thead className={s.title}>\r\n      <tr>\r\n        <th>Type</th>\r\n        <th>Amount</th>\r\n        <th>Currency</th>\r\n      </tr>\r\n    </thead>\r\n          \r\n    <tbody className={s.tbody}>\r\n            {items.map(item => (<tr\r\n              key={item.id}\r\n              className={s.tr}>\r\n              <Transaction\r\n                type={item.type}\r\n                amount={item.amount}\r\n                currency={item.currency}/>\r\n              </tr>))}\r\n    </tbody>\r\n  </table>\r\n    )\r\n}\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory","import user from './components/Profile/user.json'\nimport './App.css';\nimport Profile from './components/Profile/Profile'\nimport statisticalData from './components/Statistics/statistical-data.json'\nimport Statistics from './components/Statistics/Statistics'\nimport friends from './components/FriendList/friends.json'\nimport FriendList from './components/FriendList/FriendList'\nimport transactions from './components/TransactionHistory/transactions.json'\nimport TransactionHistory from './components/TransactionHistory/TransactionHistory'\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />;\n      <FriendList friends={friends} />\n      <TransactionHistory items={transactions} />;\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n// const link = React.createElement(\"a\", { href: \"reactjs.org\" }, \"Link\")\n \n// console.log(link)\n\n// ReactDOM.render(link, document.getElementById(\"root\"))"],"sourceRoot":""}